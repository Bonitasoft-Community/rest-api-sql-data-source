#The technical name of the REST API extension
#Must be URL compliant (alpha-numeric characters with no whitespace) and be prefixed by "custompage_"
name=custompage_datasource

#Name displayed in the Portal
displayName=REST API extension - Generic data source

#Description displayed in the Portal
description=A REST API extension executing SQL queries using a data source

#Must be apiExtension for a REST API extension
contentType=apiExtension

#Declare at least one API extension here (comma-separated list)
apiExtensions=datasource

#For each declared API extension,  specify the
#following properties: method,pathTemplate,classFileName and permissions

#Specify one HTTP verb from GET|POST|PUT|PATCH|DELETE|HEAD|OPTIONS|TRACE
#GET is the recommended value for a REST API extension.
#Write operations should be performed by a process.
datasource.method=GET

#Define the URL path template
#Resulting URL: ../API/extension/sqlExample
datasource.pathTemplate=sqlExample

#Declare the associated RestAPIController Groovy file
datasource.classFileName=org/bonitasoft/rest/api/extension/Index.groovy

#Declare the permissions list (comma-separated list)
#For each permission declared, you must map it either to a profile (for example User, Administrator, or a custom profile) or to a specific user.
#Edit tenants/${tenant_id}/tenant_portal/custom-permissions-mapping.properties. "tenants" folder is located in "setup/platform_conf_current".
#For example: user|john=[demoPermission] or profile|User=[demoPermission]
#In production, restart the web server to apply the changes.
#In the studio, you just have to logout/login to apply the changes.
datasource.permissions=demoPermission
